-- // const dateOffsets = `
-- //   WITH RECURSIVE cte_numbers (n) AS (
-- //     SELECT 1
-- //     UNION ALL
-- //     SELECT n + 1 FROM cte_numbers WHERE n < 7
-- //   ),
-- //   cte_dateOffsets as (
-- //     SELECT nmbrs.n, '''' || cast(nmbrs.n*-1 as varchar) || ' day''' as dateOffset
-- //     FROM   cte_numbers nmbrs
-- //   )  
-- //   select *
-- //   from   cte_dateOffsets
-- // `

-- // WITH RECURSIVE cte_numbers (n, w) AS (
-- //   SELECT 1, 1
-- //   UNION ALL
-- //   SELECT n + 1, 
-- //          case when n+1 < 8 then 1
-- //               when n+1 < 15 then 2
-- //               else 3 
-- //          end as w     
-- //   FROM   cte_numbers 
-- //   WHERE  n < 100
-- // )
-- // select *
-- // from   cte_numbers

-- // SELECT date('now', 'weekday 0', '+7 days') 
-- // union all 
-- // SELECT date('now', 'weekday 0', '-0 days')
-- // union all 
-- // SELECT date('now', 'weekday 0', '-7 days')

  --  ----------------------------------------------------------------------
  --  Generate all minutes:seconds in a day for testing formatting 
  --  ----------------------------------------------------------------------
  --  WITH RECURSIVE 
  --    cte_minutes (n) AS (
  --        SELECT 0
  --        UNION ALL
  --        SELECT n + 1 FROM cte_minutes WHERE n < 23
  --    ),
  --    cte_seconds (n, s) as (
  --        SELECT n, 0
  --        from   cte_minutes
  --        UNION ALL
  --        SELECT n, s + 1 
  --        FROM   cte_seconds WHERE s < 59
  --    ),
  --  cte_timestamps as (
  --      select PRINTF('%02d',cte2.n) || ':' || PRINTF('%02d',cte2.s) as timeStamp,
  --             cte2.n, 
  --             cte2.s
  --      from   cte_seconds  cte2
  --      order  by n
  --  )  
  --  select cte3.timeStamp
  --        ,case when substr(cte3.timeStamp, 1, 2) > '11' 
  --              then 'PM' else 'AM'
  --         end as timeStamp    
  --  from   cte_timestamps cte3
